apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apigateway
  labels:
    component: ads
    module: apigateway-app
spec:
  ingressClassName: nginx
  rules:
    - host: localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: apigateway
                port:
                  name: http
---
apiVersion: v1
kind: Service
metadata:
  name: apigateway
  labels:
    component: apigateway
    module: apigateway-app
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: http
      name: http
  selector:
    component: apigateway
    module: apigateway-app
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apigateway
  labels:
    component: apigateway
    module: apigateway-app
spec:
  replicas: 1
  selector:
    matchLabels:
      component: apigateway
      module: apigateway-app
  template:
    metadata:
      labels:
        component: apigateway
        module: apigateway-app
    spec:
      containers:
        - name: apigateway-app
          image: apigateway:local
          imagePullPolicy: Never
          ports:
            - containerPort: 80
              name: http
          # env:
          # - name: SPRING_DATASOURCE_URL
          #   valueFrom:
          #     configMapKeyRef:
          #       key: postgres_url
          #       name: apigateway
          # - name: SPRING_DATASOURCE_PASSWORD
          #   value: postgres
          # - name: SPRING_DATASOURCE_USERNAME
          #   value: postgres
          resources:
            limits:
              memory: 1Gi
            requests:
              memory: 800Mi
